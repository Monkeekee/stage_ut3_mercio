
@misc{product_matching_ecommerce,
	title = {4 {Models} for {Product} {Matching} in {Ecommerce}},
	url = {https://forbytes.com/blog/product-matching-in-ecommerce/},
	abstract = {In this article, we talk about product matching in ecommerce based on several deep learning models.},
	language = {en},
	urldate = {2022-04-27},
	journal = {Forbytes},
	month = dec,
	year = {2021},
	note = {Section: eCommerce},
	file = {Snapshot:C\:\\Users\\matthieu.akhavan_mer\\Zotero\\storage\\X8A7XFIF\\product-matching-in-ecommerce.html:text/html},
}

@misc{xgboost,
	title = {How to create a product matching model using {XGBoost}},
	url = {https://practicaldatascience.co.uk/machine-learning/how-to-create-a-product-matching-model-using-xgboost},
	abstract = {Product matching algorithms find identical products on ecommerce sites so users can compare products and retailers can compare prices. Here’s to build one.},
	language = {en},
	urldate = {2022-05-09},
	year = {0000},
	file = {Snapshot:C\:\\Users\\matthieu.akhavan_mer\\Zotero\\storage\\CM2YV35B\\how-to-create-a-product-matching-model-using-xgboost.html:text/html},
}

@inproceedings{akritidis_effective_2018,
	title = {Effective {Unsupervised} {Matching} of {Product} {Titles} with k-{Combinations} and {Permutations}},
	doi = {10.1109/INISTA.2018.8466294},
	abstract = {The problem of matching product titles is of particular interest for both users and marketers. The former, frequently search the Web with the aim of comparing prices and characteristics, or obtaining and aggregating information provided by other users. The latter, often require wide knowledge of competitive policies, prices and features to organize a promotional campaign about a group of products. To address this interesting problem, recent studies have attempted to enrich the product titles by exploiting Web search engines. More specifically, these methods suggest that for each product title a query should be submitted. After the results have been collected, the most important words which appear in the results are identified and appended in the titles. In the sequel, each word is assigned an importance score and finally, a similarity measure is applied to identify if two or more titles refer to the same product. Nonetheless, these methods have multiple problems including scalability, slow retrieval of the required additional search results, and lack of flexibility. In this paper, we present a different approach which addresses all these issues and is based on the morphological analysis of the titles of the products. In particular, our method operates in two phases. In the first phase, we compute the combinations of the words of the titles and we record several statistics such as word proximity and frequency values. In the second phase, we use this information to assign a score to each combination. The highest scoring combination is then declared as label of the cluster which contains each product. The experimental evaluation of the algorithm, in a real world dataset, demonstrated that compared to three popular string similarity metrics, our approach achieves up to 36\% better matching performance and at least 13 times faster execution.},
	author = {Akritidis, Leonidas and Bozanis, Panayiotis},
	month = jul,
	year = {2018},
	pages = {1--10},
	file = {Full Text PDF:C\:\\Users\\matthieu.akhavan_mer\\Zotero\\storage\\QNQWKUVF\\Akritidis et Bozanis - 2018 - Effective Unsupervised Matching of Product Titles .pdf:application/pdf},
}

@article{ristoski_machine_2018,
	title = {A machine learning approach for product matching and categorization: {Use} case: {Enriching} product ads with semantic structured data},
	volume = {9},
	issn = {22104968, 15700844},
	shorttitle = {A machine learning approach for product matching and categorization},
	url = {https://www.medra.org/servlet/aliasResolver?alias=iospress&doi=10.3233/SW-180300},
	doi = {10.3233/SW-180300},
	abstract = {Consumers today have the option to purchase products from thousands of e-shops. However, the completeness of the product speciﬁcations and the taxonomies used for organizing the products differ across different e-shops. To improve the consumer experience, e.g., by allowing for easily comparing offers by different vendors, approaches for product integration on the Web are needed. In this paper, we present an approach that leverages neural language models and deep learning techniques in combination with standard classiﬁcation approaches for product matching and categorization. In our approach we use structured product data as supervision for training feature extraction models able to extract attribute-value pairs from textual product descriptions. To minimize the need for lots of data for supervision, we use neural language models to produce word embeddings from large quantities of publicly available product data marked up with Microdata, which boost the performance of the feature extraction model, thus leading to better product matching and categorization performances. Furthermore, we use a deep Convolutional Neural Network to produce image embeddings from product images, which further improve the results on both tasks.},
	language = {en},
	number = {5},
	urldate = {2022-08-18},
	journal = {Semantic Web},
	author = {Ristoski, Petar and Petrovski, Petar and Mika, Peter and Paulheim, Heiko},
	editor = {d’Amato, Claudia},
	month = aug,
	year = {2018},
	pages = {707--728},
	file = {Ristoski et al. - 2018 - A machine learning approach for product matching a.pdf:C\:\\Users\\matthieu.akhavan_mer\\Zotero\\storage\\AURGH2CS\\Ristoski et al. - 2018 - A machine learning approach for product matching a.pdf:application/pdf},
}

@inproceedings{peeters_supervised_2022-1,
	title = {Supervised {Contrastive} {Learning} for {Product} {Matching}},
	url = {http://arxiv.org/abs/2202.02098},
	doi = {10.1145/3487553.3524254},
	abstract = {Contrastive learning has moved the state of the art for many tasks in computer vision and information retrieval in recent years. This poster is the first work that applies supervised contrastive learning to the task of product matching in e-commerce using product offers from different e-shops. More specifically, we employ a supervised contrastive learning technique to pre-train a Transformer encoder which is afterward fine-tuned for the matching task using pair-wise training data. We further propose a source-aware sampling strategy that enables contrastive learning to be applied for use cases in which the training data does not contain product identifiers. We show that applying supervised contrastive pre-training in combination with source-aware sampling significantly improves the state-of-the-art performance on several widely used benchmarks: For Abt-Buy, we reach an F1-score of 94.29 (+3.24 compared to the previous state-of-the-art), for Amazon-Google 79.28 (+ 3.7). For WDC Computers datasets, we reach improvements between +0.8 and +8.84 in F1-score depending on the training set size. Further experiments with data augmentation and self-supervised contrastive pre-training show that the former can be helpful for smaller training sets while the latter leads to a significant decline in performance due to inherent label noise. We thus conclude that contrastive pre-training has a high potential for product matching use cases in which explicit supervision is available.},
	urldate = {2022-08-18},
	booktitle = {Companion {Proceedings} of the {Web} {Conference} 2022},
	author = {Peeters, Ralph and Bizer, Christian},
	month = apr,
	year = {2022},
	note = {arXiv:2202.02098 [cs]},
	keywords = {Computer Science - Machine Learning},
	pages = {248--251},
	file = {arXiv Fulltext PDF:C\:\\Users\\matthieu.akhavan_mer\\Zotero\\storage\\4G8HBX7Z\\Peeters et Bizer - 2022 - Supervised Contrastive Learning for Product Matchi.pdf:application/pdf;arXiv.org Snapshot:C\:\\Users\\matthieu.akhavan_mer\\Zotero\\storage\\FG37DUMH\\2202.html:text/html},
}

@misc{cathegorical_data,
	title = {Handling {Categorical} {Data} in {Python} {Tutorial}},
	url = {https://www.datacamp.com/tutorial/categorical-data},
	abstract = {Learn the common tricks to handle CATEGORICAL data, such as converting to numeric PANDAS or missing data and preprocess it to build MACHINE LEARNING models!},
	language = {en-US},
	urldate = {2022-08-18},
	file = {Snapshot:C\:\\Users\\matthieu.akhavan_mer\\Zotero\\storage\\CILU48PV\\categorical-data.html:text/html},
}

@misc{akritidis_clustering-based_2019,
	title = {A {Clustering}-{Based} {Combinatorial} {Approach} to {Unsupervised} {Matching} of {Product} {Titles}},
	url = {http://arxiv.org/abs/1903.04276},
	abstract = {The constant growth of the e-commerce industry has rendered the problem of product retrieval particularly important. As more enterprises move their activities on the Web, the volume and the diversity of the product-related information increase quickly. These factors make it difficult for the users to identify and compare the features of their desired products. Recent studies proved that the standard similarity metrics cannot effectively identify identical products, since similar titles often refer to different products and vice-versa. Other studies employed external data sources (search engines) to enrich the titles; these solutions are rather impractical mainly because the external data fetching is slow. In this paper we introduce UPM, an unsupervised algorithm for matching products by their titles. UPM is independent of any external sources, since it analyzes the titles and extracts combinations of words out of them. These combinations are evaluated according to several criteria, and the most appropriate of them constitutes the cluster where a product is classified into. UPM is also parameter-free, it avoids product pairwise comparisons, and includes a post-processing verification stage which corrects the erroneous matches. The experimental evaluation of UPM demonstrated its superiority against the state-of-the-art approaches in terms of both efficiency and effectiveness.},
	urldate = {2022-08-18},
	publisher = {arXiv},
	author = {Akritidis, Leonidas and Fevgas, Athanasios and Bozanis, Panayiotis and Makris, Christos},
	month = mar,
	year = {2019},
	note = {arXiv:1903.04276 [cs, stat]},
	keywords = {Computer Science - Information Retrieval, Computer Science - Machine Learning, Statistics - Machine Learning},
	file = {arXiv Fulltext PDF:C\:\\Users\\matthieu.akhavan_mer\\Zotero\\storage\\I3HR63Y9\\Akritidis et al. - 2019 - A Clustering-Based Combinatorial Approach to Unsup.pdf:application/pdf;arXiv.org Snapshot:C\:\\Users\\matthieu.akhavan_mer\\Zotero\\storage\\25M7IIU2\\1903.html:text/html},
}

@article{kaul_automatic_nodate,
	title = {Automatic {Product} {Classification} and {Clustering} {Solutions} in a {Retail} {Context}},
	abstract = {In this report we propose a methodology to automatically classify products and cluster similar products together. This enhances user interaction and performance metrics for e-commerce (product shopping) websites, with applications in product search, site navigation, product comparison, etc. For this project, a variant of the multinomial Naive Bayes algorithm was used for classification. We present our findings of key aspects that demonstrate its accuracy. A clustering methodology was developed to handle large data-sets, overcoming the N 2 complexity, in a two-step approach. The first step of clustering utilizes Locality Sensitive Hashing, the second step uses a Shingles matching method. We describe a methodology that allows trading cluster-size versus similarity of items within a cluster and propose a way to use clustering to increment classification accuracy.},
	language = {en},
	author = {Kaul, Rohit and Bhateja, Rajiv},
	pages = {5},
	file = {Kaul et Bhateja - Automatic Product Classification and Clustering So.pdf:C\:\\Users\\matthieu.akhavan_mer\\Zotero\\storage\\JWT9P65Z\\Kaul et Bhateja - Automatic Product Classification and Clustering So.pdf:application/pdf},
}

@misc{recommender_prod,
	title = {How to create a simple product recommender system in {Pandas}},
	url = {https://practicaldatascience.co.uk/data-science/how-to-create-a-simple-product-recommender-system-in-pandas},
	abstract = {Learn how to create a product recommender or product recommendation system in Python using Pandas to implement the collaborative filtering algorithm.},
	language = {en},
	urldate = {2022-08-18},
	year = {0000},
	file = {Snapshot:C\:\\Users\\matthieu.akhavan_mer\\Zotero\\storage\\X9G5P273\\how-to-create-a-simple-product-recommender-system-in-pandas.html:text/html},
}

@misc{analyse_facto,
	title = {Guide de l’analyse factorielle : définition et utilisation},
	shorttitle = {Guide de l’analyse factorielle},
	url = {https://www.qualtrics.com/fr/gestion-de-l-experience/etude-marche/analyse-factorielle-guide/},
	abstract = {Simplifiez l’interprétation et le partages des résultats de vos études complexes grâce à l’analyse factorielle et l’analyse en composantes principales.},
	language = {fr},
	urldate = {2022-08-18},
	journal = {Qualtrics},
	file = {Snapshot:C\:\\Users\\matthieu.akhavan_mer\\Zotero\\storage\\CX3Y8KNF\\analyse-factorielle-guide.html:text/html},
}
